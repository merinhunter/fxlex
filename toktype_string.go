// Code generated by "stringer -type tokType fxlex.go"; DO NOT EDIT.

package fxlex

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TokKey-1114113]
	_ = x[TokID-1114114]
	_ = x[TokFunc-1114115]
	_ = x[TokIntLit-1114116]
	_ = x[TokBoolLit-1114117]
	_ = x[Declaration-1114118]
	_ = x[TokPow-1114119]
	_ = x[TokGTE-1114120]
	_ = x[TokLTE-1114121]
	_ = x[TokLPar-40]
	_ = x[TokRPar-41]
	_ = x[TokLCurl-123]
	_ = x[TokRCurl-125]
	_ = x[TokLSquare-91]
	_ = x[TokRSquare-93]
	_ = x[TokComma-44]
	_ = x[TokDot-46]
	_ = x[Semicolon-59]
	_ = x[Assignation-61]
	_ = x[TokPlus-43]
	_ = x[TokMinus-45]
	_ = x[TokTimes-42]
	_ = x[TokDivide-47]
	_ = x[TokRem-37]
	_ = x[TokGT-62]
	_ = x[TokLT-60]
	_ = x[TokOr-124]
	_ = x[TokAnd-38]
	_ = x[TokNeg-33]
	_ = x[TokXor-94]
	_ = x[TokEOF-1114112]
}

const (
	_tokType_name_0 = "TokNeg"
	_tokType_name_1 = "TokRemTokAnd"
	_tokType_name_2 = "TokLParTokRParTokTimesTokPlusTokCommaTokMinusTokDotTokDivide"
	_tokType_name_3 = "SemicolonTokLTAssignationTokGT"
	_tokType_name_4 = "TokLSquare"
	_tokType_name_5 = "TokRSquareTokXor"
	_tokType_name_6 = "TokLCurlTokOrTokRCurl"
	_tokType_name_7 = "TokEOFTokKeyTokIDTokFuncTokIntLitTokBoolLitDeclarationTokPowTokGTETokLTE"
)

var (
	_tokType_index_1 = [...]uint8{0, 6, 12}
	_tokType_index_2 = [...]uint8{0, 7, 14, 22, 29, 37, 45, 51, 60}
	_tokType_index_3 = [...]uint8{0, 9, 14, 25, 30}
	_tokType_index_5 = [...]uint8{0, 10, 16}
	_tokType_index_6 = [...]uint8{0, 8, 13, 21}
	_tokType_index_7 = [...]uint8{0, 6, 12, 17, 24, 33, 43, 54, 60, 66, 72}
)

func (i tokType) String() string {
	switch {
	case i == 33:
		return _tokType_name_0
	case 37 <= i && i <= 38:
		i -= 37
		return _tokType_name_1[_tokType_index_1[i]:_tokType_index_1[i+1]]
	case 40 <= i && i <= 47:
		i -= 40
		return _tokType_name_2[_tokType_index_2[i]:_tokType_index_2[i+1]]
	case 59 <= i && i <= 62:
		i -= 59
		return _tokType_name_3[_tokType_index_3[i]:_tokType_index_3[i+1]]
	case i == 91:
		return _tokType_name_4
	case 93 <= i && i <= 94:
		i -= 93
		return _tokType_name_5[_tokType_index_5[i]:_tokType_index_5[i+1]]
	case 123 <= i && i <= 125:
		i -= 123
		return _tokType_name_6[_tokType_index_6[i]:_tokType_index_6[i+1]]
	case 1114112 <= i && i <= 1114121:
		i -= 1114112
		return _tokType_name_7[_tokType_index_7[i]:_tokType_index_7[i+1]]
	default:
		return "tokType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
